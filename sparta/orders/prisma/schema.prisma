generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id        Int @id   @default(autoincrement()) @map("@userId")
  nickname  String    @map("nickname")
  password  String    @map("password")
  usertype  userType  @default(CUSTOMER) @map("userType")
  createdAt DateTime  @default(now()) @map("createdAt")
  updatedAt DateTime  @updatedAt @map("updatedAt")
  
  orders    Orders[]
  @@map("Users")

}

model Categories {
  id        Int       @id @default(autoincrement()) @map("id")
  name      String    @map("name")
  orders    Int       @map("orders")
  updateAt  DateTime  @map("updateAt")
  deleteAt  DateTime? @map("categoriesDeleteAt") @db.Timestamp()
  menu      Menu[]
  @@map("Categories")
}

model Menu {
  id            Int          @id @default(autoincrement()) @map("menuId")
  name          String       @map("menuName")
  description   String       @db.Text  @map("description")
  image         String       @map("image")
  price         Int          @map("price")
  order         Int          @map("menuOrder")
  status        menuStatus   @default(FOR_SALE) @map("status")
  categories_id Int?
  Categories    Categories?  @relation(fields: [categories_id], references: [id], onDelete: Cascade)
  updateAt      DateTime     @map("menuUpdateAt")
  deleteAt      DateTime?    @map("menuDeleteAt") @db.Timestamp()
  orders        Orders[]
  @@map("Menu")
}

model Orders {
  id          Int       @id @default(autoincrement()) @map("ordersId")
  user_Id     Int?
  nickname    String   @map("nickname")
  UserId      Users?    @relation(fields: [user_Id], references: [id])  
  menu_Id     Int?  
  menuName    String    @map("menuName")
  MenuId      Menu?     @relation(fields: [menu_Id], references: [id])  
  quantity    Int       @map("quantity")
  status      orderType @default(PENDING) @map("status")
  totalPrice  Int       @map("totalPrice")
  createdAt   DateTime  @map("createdAt")


  @@map("Orders")
}


enum menuStatus{
  FOR_SALE
  SOLD_OUT
}

enum userType{
  CUSTOMER
  OWNER
}

enum orderType{
  PENDING
  ACCEPTED
  CANCEL
}